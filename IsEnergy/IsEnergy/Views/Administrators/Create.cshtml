@model IsEnergyModel.Administrators

@{
    Layout = null;
}
<script type="text/javascript">
    function Create_Admin() {       
        if (ASPxClientEdit.ValidateGroup('AdminVG')) {
            var form = document.getElementById("AddAdministrator");
            form.submit();
        }
    };
</script>
 @using(Html.BeginForm("CreateAdd", "Administrators", FormMethod.Post, new { id = "AddAdministrator" }))
{
@Html.AntiForgeryToken()
<div id="CreateAdminForm">
    <fieldset>
        <legend>Основные</legend>
        <style>
            table {
                border-spacing: 1px; /* Расстояние между ячейками */
            }
            td, th {
                padding: 3px; /* Поля вокруг текста */
            }
        </style>
        <table>
            <tr>
                <td>@Html.DevExpress().LabelFor(model => model.IdUser, settings => { settings.Width = 140; settings.Text = "Пользователь"; }).GetHtml()</td>
                <td>@Html.DevExpress().ComboBoxFor(model=>model.IdUser,
        settings =>
        {
           // settings.Name = "IdUser";
            settings.Width = 350;
            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
            settings.Properties.TextFormatString = "{0} {1} {2}";
            settings.Properties.ValueField = "IdUser";
            settings.Properties.AnimationType = AnimationType.Auto;
            settings.Properties.ValueType = typeof(int);
            settings.Properties.Columns.Add("FirstName", "Фамилия", 50);
            settings.Properties.Columns.Add("MidleName", "Имя", 50);
            settings.Properties.Columns.Add("LastName", "Отчество", 50);
            settings.Properties.Columns.Add("Login", "Логин", 50);
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ValidationGroup = "AdminVG";
            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;

        }).BindList(ViewData["Users"]).GetHtml()</td>
            </tr>
            <tr>
                <td>@Html.DevExpress().LabelFor(model => model.IdentifierSubscriber, settings => { settings.Width = 140; settings.Text = "Абонент"; }).GetHtml()</td>
                <td>@Html.DevExpress().ComboBoxFor(model => model.IdentifierSubscriber, settings =>
        {
            settings.Name = "IdentifierSubscriber";
            settings.Width = 350;
            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
            settings.Properties.AnimationType = AnimationType.Auto;
            settings.Properties.ValueType = typeof(string);
            settings.Properties.TextFormatString = "{0} {1}";
            settings.Properties.ValueField = "IdentifierSubscriber";
            settings.Properties.Columns.Add("Name", "Наименование", 100);
            settings.Properties.Columns.Add("Requisites", "Реквизиты", 250);
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.ValidationGroup = "AdminVG";
            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;

        }).BindList(ViewData["Subscribers"]).GetHtml()</td>
            </tr>
        </table>

      

        <table>
            <tr>
                <td>@Html.DevExpress().LabelFor(model => model.Comment, settings => { settings.Width = 140; settings.Text = "Примечание"; }).GetHtml()</td>
                <td>@Html.DevExpress().MemoFor(model => model.Comment, settings =>
           {
               settings.Name = "Comment";
               settings.Width = 350;
               settings.Height = 70;
               settings.ShowModelErrors = true;
               settings.Properties.ValidationSettings.Display = Display.None;
           }).GetHtml()</td>
            </tr>
        </table>
    </fieldset>

    <fieldset>

        <legend>Дополнительно</legend>
        <table>
            <tr>
                <td>
                    @Html.DevExpress().CheckBox(settings =>
           {
               settings.Name = "MainAdministrators";
               settings.Checked = false;
               settings.Text = "Полный доступ";
               settings.Properties.ValidationSettings.RequiredField.IsRequired = false;
           }).GetHtml()
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DevExpress().CheckBox(settings =>
           {
               settings.Name = "ModifyingAdministrators";
               settings.Checked = false;
               settings.Text = "Редактирование администраторов";
           }).GetHtml()
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DevExpress().CheckBox(settings =>
           {
               settings.Name = "ModifyingOperators";
               settings.Checked = false;
               settings.Text = "Редактирование операторов";
           }).GetHtml()
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DevExpress().CheckBox(settings =>
           {
               settings.Name = "ModifyingNews";
               settings.Checked = false;
               settings.Text = "Редактирование новостей";
           }).GetHtml()
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DevExpress().CheckBox(settings =>
           {
               settings.Name = "ModifyingMailing";
               settings.Checked = false;
               settings.Text = "Отправка рассылок";
           }).GetHtml()
                </td>
            </tr>
</table>

    </fieldset>
    <table>
    <tr>
        <td><button class="action bluebtn" type="button"  onclick="javascript:Create_Admin();"><span class="label">Добавить</span></button></td>
        <td><button class="action" type="button"  onclick="javascript:pcModalMode.Hide();"><span class="label">Отмена</span></button></td>
    </tr>
</table>
        
    </div>
 }