@{
 Layout = null;
}

<script type="text/javascript">
    
function OnCompleteAddUser(request, status) {
    if (status != 'success') alert("Не удалось добавить пользователя в список");
    else pcModalModeUsers.Hide();
   }
function OnCompleteAddNewUser(request, status) {
    if (status != 'success') alert("Не удалось создать пользователя для списка");
    else pcModalModeNewUser.Hide();
    }

function DetailsFromUserListST(s, e) {
    $.post('/Subscriber/DetailsFromUserList', { id: s.GetRowKey(e.visibleIndex) }, function (data) { window.location.href = data });
}
function DeleteFromUserListST(s, e) {
    if (confirm("Исключить сотрудника ?")) {
        var IdentifierSubscribervar ='@ViewData["IdentifierSubscriber"]';
        $.post('/Subscriber/DeleteFromUserList', { id: s.GetRowKey(e.visibleIndex), IdentifierSubscriber: IdentifierSubscribervar }, function (data) { $('#GridUserListArea').html(data); });
    }
}
function AppointChiefUserST(s, e) {
    if (confirm("Назначить главным сотрудника ?")) {
        var IdentifierSubscribervar = '@ViewData["IdentifierSubscriber"]';
        $.post('/Subscriber/AppointChiefUser', { id: s.GetRowKey(e.visibleIndex), IdentifierSubscriber: IdentifierSubscribervar }, function (data) { $('#GridUserListArea').html(data); });
    }
}
</script>

<table>
    <tr>
        <td>
            <button class="action bluebtn" type="button" onclick="javascript:pcModalModeUsers.Show();"><span class="label">Добавить пользователя</span></button>
        </td>
        <td>
            <button class="action bluebtn" type="button" onclick="javascript:pcModalModeNewUser.Show();"><span class="label">Создать пользователя</span></button>
        </td>
    </tr>
</table>

    <div id="GridUserListArea">
         @Html.Action("GridUserList", new { identifierSubscriber = ViewData["IdentifierSubscriber"] })
    </div>

@Html.DevExpress().PopupControl(
                    settingsPC =>
                    {
                        settingsPC.Name = "pcModalModeUsers";
                        settingsPC.Width = 600;
                        settingsPC.Height = 200;
                        settingsPC.AllowDragging = true;
                        settingsPC.CloseAction = CloseAction.CloseButton;
                        settingsPC.PopupAnimationType = AnimationType.None;
                        settingsPC.HeaderText = "Добавить";
                        settingsPC.ShowLoadingPanel = true;
                        settingsPC.Modal = true;
                        settingsPC.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
                        settingsPC.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
                        settingsPC.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(pcModalModeUsers, '', true); }";
                        settingsPC.SetContent(() =>
                        {
                            using (Ajax.BeginForm("AddUser", new { identifierSubscriber = ViewData["IdentifierSubscriber"] }, new AjaxOptions { UpdateTargetId = "GridUserListArea", Confirm = "Внести измнения?", OnComplete = "OnCompleteAddUser" }))
                            {
                                 Html.RenderAction("AddUserStart");
                            }
                        });
                    }).GetHtml()


@Html.DevExpress().PopupControl(
                    settingsPC =>
                    {
                        settingsPC.Name = "pcModalModeNewUser";
                        settingsPC.Width = 600;
                        settingsPC.Height = 450;
                        settingsPC.AllowDragging = true;
                        settingsPC.CloseAction = CloseAction.CloseButton;
                        settingsPC.PopupAnimationType = AnimationType.None;
                        settingsPC.HeaderText = "Добавить";
                        settingsPC.ShowLoadingPanel = true;
                        settingsPC.Modal = true;
                        settingsPC.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
                        settingsPC.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
                        settingsPC.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(pcModalModeNewUser, '', true); }";
                        settingsPC.SetContent(() =>
                        {
                            using (Ajax.BeginForm("AddNewUserForSub", new { identifierSubscriber = ViewData["IdentifierSubscriber"] }, new AjaxOptions { UpdateTargetId = "GridUserListArea", Confirm = "Внести измнения?", OnComplete = "OnCompleteAddNewUser" }, new { id = "AddNewUserForSubForm" }))
                            {
                                Html.RenderAction("AddNewUserForSubStart");
                            }
                        });
                    }).GetHtml()