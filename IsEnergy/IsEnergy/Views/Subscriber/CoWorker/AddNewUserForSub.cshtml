@model IsEnergyModel.SubscribersUserList
 
<script type="text/javascript">

    function AddNewUserForSubJs() {
        if (ASPxClientEdit.ValidateGroup('AddNewUserVG'))
        {
            $('form#AddNewUserForSubForm').submit();
        }
    };
</script>

<div id ="AddNewUserForSubArea">
  <fieldset>
        <legend>Реквизиты пользователя</legend>
      <style>
   table {
   
    border-spacing: 1px; /* Расстояние между ячейками */
   }
   td, th {
  
    padding: 1px; /* Поля вокруг текста */
   }

 </style>
      
   <table >
   <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Name = "UserFirstName_LabelAddNewUser"; settings.Width = 140; settings.Text = "Фамилия*"; }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => model.Users.FirstName, settings =>
        {
            settings.Name = "Users.FirstName";
            settings.Width = 200;
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            settings.Properties.ValidationSettings.ValidationGroup = "AddNewUserVG";
        }).GetHtml()   </td> 
           
  </tr> 
  <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Name = "UserMidleName_LabelAddNewUser"; settings.Width = 140; settings.Text = "Имя*"; }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => model.Users.MidleName, settings =>
        {
            settings.Name = "Users.MidleName";
            settings.Width = 200;
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            settings.Properties.ValidationSettings.ValidationGroup = "AddNewUserVG";
        }).GetHtml()   </td> 
          
  </tr> 
 
  <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Name = "UserLastName_LabelAddNewUser"; settings.Width = 140; settings.Text = "Отчество*"; }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => model.Users.LastName, settings =>
        {
            settings.Name = "Users.LastName";
            settings.Width = 200;
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            settings.Properties.ValidationSettings.ValidationGroup = "AddNewUserVG";
        }).GetHtml()   </td> 
          
  </tr> 
  <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Name = "UserLogin_LabelAddNewUser"; settings.Width = 140; settings.Text = "Логин*"; }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => model.Users.Login, settings =>
        {
            settings.Name = "Users.Login";
            settings.Width = 200;
            settings.ShowModelErrors = true;
            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            settings.Properties.ValidationSettings.ValidationGroup = "AddNewUserVG";

        }).GetHtml()   </td> 
          
  </tr>     
  <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Name = "UserPassword_LabelAddNewUser"; settings.Width = 140; settings.Text = "Пароль*"; }).GetHtml()</td>
        <td> @Html.DevExpress().TextBox( settings =>
        {
            settings.Name = "Users_Password";
            settings.Width = 200;
            settings.ShowModelErrors = true;
            settings.Properties.Password = true;
            settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            settings.Properties.ValidationSettings.ValidationGroup = "AddNewUserVG";
        }).GetHtml()   </td> 
          
  </tr>
            
   <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Name = "UserPhone_LabelAddNewUser"; settings.Width = 140; settings.Text = "Телефон"; }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => model.Users.Phone, settings =>
        {
            settings.Name = "Users.Phone";
            settings.Width = 200;
            settings.Properties.MaskSettings.Mask = "8-(000) 000-00-00";
            settings.Properties.MaskSettings.ErrorText = "Неверно указан номер";
            settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
            settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
            settings.Properties.ValidationSettings.ValidationGroup = "AddNewUserVG";

        }).GetHtml()   </td> 
          
  </tr>       
      
     
       <tr>
            <td>@Html.DevExpress().Label(settings => { settings.Name = "UserEmail_LabelAddNewUser"; settings.Width = 140; settings.Text = "Почта"; }).GetHtml()</td>
            <td>@Html.DevExpress().TextBoxFor(model => model.Users.Email, settings =>
           {
               settings.Name = "Users.Email";
               settings.Width = 200;
               settings.ShowModelErrors = true;
               settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}";
               settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Некорректный адрес";
               settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText; 
               settings.Properties.ValidationSettings.ValidationGroup = "AddNewUserVG";
           }).GetHtml()  </td>
           
       </tr>
         


       <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Name = "UserSubdivision_LabelAddNewUser"; settings.Width = 140; settings.Text = "Подразделение"; }).GetHtml()</td>
        <td>@Html.DevExpress().ComboBoxFor(model=>model.IdSubdivision,
        settings =>{
            settings.Width = 300;
            settings.SelectedIndex = 0;
            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
            settings.Properties.TextFormatString = "({1}) {0}";
            settings.Properties.ValueField = "IdSubdivision";
            settings.Properties.AnimationType = AnimationType.Auto;
            settings.Properties.ValueType = typeof(int);
            settings.Properties.Columns.Add("SubdivisionName", "Название подразделения", 150);
            settings.Properties.Columns.Add("SubdivisionCode", "Код подразделения", 50);
        }).BindList(ViewData["Subdivision"]).GetHtml()</td>                
    </tr>
          <tr>
              <td>
                  @Html.DevExpress().Label(settings =>
{
    settings.Name = "Certificates";
    settings.Text = "Загрузить сертификат";
    settings.Width = 140;
}).GetHtml()
              </td>

              <td>
                  @Html.DevExpress().UploadControl(settings =>
        {
            settings.Name = "fileUploadCreat";
            settings.FileInputCount = 1;
            settings.Width = 320;
            string[] AllowedFileExtensions = { ".cer", ".p7b" };
            settings.ValidationSettings.AllowedFileExtensions = AllowedFileExtensions;

            //settings.CallbackRouteValues = new { Controller = "Users", Action = "UploadControlCertificateUpload" };
        }).GetHtml()
              </td>
          </tr>
      </table>
   </fieldset>
      
                  <button class="action bluebtn" type="button" onclick="AddNewUserForSubJs();" ><span class="label">Добавить пользователя</span></button>
            <button class="action" type ="button" onclick="javascript:pcModalModeNewUser.Hide();"><span class="label">Отмена</span></button>
              
</div>