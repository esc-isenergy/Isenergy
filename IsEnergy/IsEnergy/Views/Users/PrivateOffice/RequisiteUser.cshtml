@model IsEnergyModel.Users

<script type="text/javascript">


    function OnCompletePrivateDetailsUser(request, status) {
        if (ASPxClientEdit.ValidateGroup('UserEditVG')) {
            if (confirm("Редактировать пользователя?")) {
                var form = document.getElementById("UserPrivateEdit");
                form.submit();
            }
        }

    }

</script>

          <style>
   table {
   
    border-spacing: 1px; /* Расстояние между ячейками */
   }
   td, th {
  
    padding: 3px; /* Поля вокруг текста */
   }

     
  </style>
   
        <div class="editor-field">
            @Html.HiddenFor(model => model.IdUser)
        </div>
            @Html.HiddenFor(model => model.IdCertificate)



          <table >
    <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Width = 140; settings.Text = "Фамилия*"; }).GetHtml()</td>
        <td>@Html.DevExpress().TextBoxFor(m => m.FirstName, settings => {
                 settings.Name = "FirstName";
                 settings.Width = 200;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.ValidationGroup = "UserEditVG";
                 settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                 settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                }).GetHtml()</td>
     
   </tr>
   <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Width = 140; settings.Text = "Имя*"; }).GetHtml()</td>
        <td>@Html.DevExpress().TextBoxFor(m => m.MidleName, settings => {
           settings.Name = "MidleName";
                 settings.Width = 200;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.ValidationGroup = "UserEditVG";
                 settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                 settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                }).GetHtml()</td>
     
   </tr> 
    <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Width = 140; settings.Text = "Отчество*"; }).GetHtml()</td>
        <td>@Html.DevExpress().TextBoxFor(m => m.LastName, settings => {
                 settings.Name = "LastName";
                 settings.Width = 200;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.ValidationGroup = "UserEditVG";
                 settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                 settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                }).GetHtml()</td>
      
   </tr> 
    <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Width = 140; settings.Text = "Логин*"; }).GetHtml()</td>
        <td>@Html.DevExpress().TextBoxFor(m => m.Login, settings => {
                 settings.Name = "Login";
                 settings.ReadOnly = true;
                 settings.Width = 200;
                }).GetHtml()</td>
      
   </tr> 
  
   <tr>
        <td>@Html.DevExpress().Label( settings => { settings.Width = 140; settings.Text = "Телефон*"; }).GetHtml()</td>
        <td>@Html.DevExpress().TextBoxFor(m => m.Phone, settings => {
                 settings.Name = "Phone";
                 settings.Width = 200;
                 settings.Properties.MaskSettings.Mask = "8-(000) 000-00-00";
                 settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.None;
                 settings.Properties.ValidationSettings.ValidationGroup = "UserEditVG";
                 settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                 settings.Properties.ValidationSettings.RequiredField.ErrorText = "Поле должно быть заполнено";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                }).GetHtml()</td>
      
    </tr>
    <tr>
        <td>@Html.DevExpress().Label(settings => { settings.Width = 140; settings.Text = "Электронная почта"; }).GetHtml()</td>
        <td>@Html.DevExpress().TextBoxFor(m => m.Email, settings => {
                 settings.Name = "Email";
                 settings.Width = 200;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                 settings.Properties.ValidationSettings.ValidationGroup = "UserVG";
                 settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$";
                 settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Пароль не удовлетворяет требованиям безопасности ";
                }).GetHtml()</td>
       
   </tr> 

   
</table >

<table >
     <tr>
      <td>  
          <button class="action bluebtn" type="button" onclick="javascript:OnCompletePrivateDetailsUser();"><span class="label">Редактировать</span></button>
     </td>
          <td>        
              <button class="action bluebtn" type="button" onclick="javascript:pcModalModePrivateEditPassword.Show();"><span class="label">Сменить пароль</span></button>
         </td>
     </tr>
</table> 

    



   