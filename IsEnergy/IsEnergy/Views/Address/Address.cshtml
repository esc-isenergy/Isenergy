@using IsEnergyModel;


@{
    Address Address = new Address();
   
    if (ViewBag.Address != null) {
        Address = ViewBag.Address; 
    }
}
<script type="text/javascript">
 
    function SelectAddress() {
      
        var selectedIndex = TypeAddressLoad.GetSelectedIndex();
        $('#Address_TypeAddress').val(selectedIndex);
      
     
        if (selectedIndex == 0) {
           
            $('#Address_RF').show();
            $('#Address_OtherCountry').hide();
            
        }
        else {
          
            $('#Address_RF').hide();
            $('#Address_OtherCountry').show();
        }
      
    }

</script>
@Html.HiddenFor(model=>Address.TypeAddress)
@Html.HiddenFor(model=>Address.IdAddress)

<div id="Address">

   <fieldset id="Addressfieldset">
        <legend>
       <table>     
      <tr>
      <td>Юридический адресс </td>
        <td>@Html.DevExpress().ComboBox(
                settings =>{

                    settings.Name = "TypeAddressLoad";
                    settings.Width = 150;
                    settings.Properties.ValueType = typeof(int);
                    settings.Properties.Items.Add("Российский",0).Index=0;
                    settings.Properties.Items.Add("Иностранный",1).Index=1;
                    settings.SelectedIndex = Address.TypeAddress;
                    settings.Properties.ClientSideEvents.CloseUp = "function(s, e) {SelectAddress()}";
                    settings.Properties.ClientSideEvents.Init = "function(s, e) {SelectAddress()}";
                    if (ViewBag.readonlytype == true)
                    {
                        settings.ReadOnly = true;
                    }
                }).GetHtml()</td> 
   </tr> 
            </table>    
       </legend>
  <div id="Address_RF">
<table>
    <tr>
        <td>@Html.DevExpress().LabelFor(model => Address.RF_Index, settings => {
             settings.Text = "Индекс:";
             settings.Width = 100;
            
             }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => Address.RF_Index, settings => {
                 settings.Width = 120;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                }).GetHtml()   </td> 
   </tr> 
    <tr>
        <td>@Html.DevExpress().LabelFor(model => Address.RF_IdRegion, settings => {
           settings.Text = "Регион:";
           settings.Width = 140; }).GetHtml()</td>
        <td> @Html.DevExpress().ComboBoxFor(model => Address.RF_IdRegion, settings=>{
            settings.Properties.ValueField = "IdRegion";
            if (Address.RF_IdRegion != null)
            {
                settings.SelectedIndex = (int)Address.RF_IdRegion - 1;
            }
            settings.Width = 370;
            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            settings.Properties.ValueType=typeof(string);
            settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
            settings.Properties.TextFormatString = "({0}) {1}";
            settings.Properties.Columns.Add("Code", "Код", 50);
            settings.Properties.Columns.Add("Name", "Название", 300);
            if (ViewBag.readonlytype == true)
            {
                settings.ReadOnly = true;
            }
            }).BindList(ViewData["Regions"]).GetHtml() 
        </td> 
              
   </tr> 

    <tr>
       <td>@Html.DevExpress().LabelFor(model => Address.RF_Area, settings => {
             settings.Text = "Район:";
             settings.Width = 140; 
             }).GetHtml()</td>

        <td> @Html.DevExpress().TextBoxFor(model => Address.RF_Area, settings => {
              settings.Width = 370;
            
              settings.ShowModelErrors = true;
              settings.Properties.ValidationSettings.Display = Display.None;
              if (ViewBag.readonlytype == true)
              {
                  settings.ReadOnly = true;
              }
              }).GetHtml()   </td> 
         
   </tr> 
   <tr>
        <td>@Html.DevExpress().LabelFor(model => Address.RF_City, settings => {
             settings.Text = "Город:";
             settings.Width = 140; 
             }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => Address.RF_City, settings => {
                 settings.Width = 370;
            
               
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                }).GetHtml()   </td> 
         
   </tr> 
    <tr>
         <td>@Html.DevExpress().LabelFor(model => Address.RF_localityCity, settings => {
             settings.Text = "Населённый пункт:";
             settings.Width = 140; 
             }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => Address.RF_localityCity, settings => {
                 settings.Width = 370;
            
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                }).GetHtml()   </td> 
        
   </tr> 
      <tr>
        <td>@Html.DevExpress().LabelFor(model => Address.RF_Street, settings => {
             settings.Text = "Улица:";
             settings.Width = 140; 
             }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => Address.RF_Street, settings => {
                settings.Width = 370;
            
                
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                }).GetHtml()   </td> 
     </tr>
</table>  
 <table>
 <tr>
      <td>@Html.DevExpress().LabelFor(model =>Address.RF_Home, settings => {
             settings.Text = "Дом:";
             settings.Width = 80; 
             }).GetHtml()</td>   
      <td> @Html.DevExpress().TextBoxFor(model => Address.RF_Home, settings => {
                 settings.Width = 90;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                }).GetHtml()   </td> 

      <td>@Html.DevExpress().LabelFor(model => Address.RF_Housing, settings => {
             settings.Text = "Корпус:";
             settings.Width = 50; 
             }).GetHtml()</td> 
        <td> @Html.DevExpress().TextBoxFor(model => Address.RF_Housing, settings => { 
                 settings.Width = 85;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                }).GetHtml()   </td> 
        <td>@Html.DevExpress().LabelFor(model => Address.RF_OfficeOrApartment, settings => {
             settings.Text = "Квартира/Оффис:";
             settings.Width = 105; 
             }).GetHtml()</td> 
        <td> @Html.DevExpress().TextBoxFor(model => Address.RF_OfficeOrApartment, settings => {
                 settings.Width = 85;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                }).GetHtml()   </td> 
    </table>
  </div>
 <div id="Address_OtherCountry">
     <table>

    <tr>
        <td>@Html.DevExpress().LabelFor(model => Address.OtherCountry_IdCountry, settings => {
           settings.Text = "Страна:";
         }).GetHtml()</td>
        <td> @Html.DevExpress().ComboBoxFor(model=>Address.OtherCountry_IdCountry,
        settings=>{
            
            settings.Width = 250;
            if (Address.OtherCountry_IdCountry != null)
            {
                settings.SelectedIndex = (int)Address.OtherCountry_IdCountry-1;
            }
            settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            settings.Properties.TextFormatString = "({0}) {1}";
            settings.Properties.ValueField = "IdCountry";
            settings.Properties.AnimationType = AnimationType.Auto;
            settings.Properties.ValueType = typeof(int);
            settings.Properties.Columns.Add("Code", "Код", 50);
            settings.Properties.Columns.Add("Name", "Название", 200);
            settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
            if (ViewBag.readonlytype == true)
            {
                settings.ReadOnly = true;
            }
        }).BindList(ViewData["Countries"]).GetHtml()   
        </td> 
   </tr> 

    <tr>
        <td>@Html.DevExpress().LabelFor(model => Address.OtherCountry_Address, settings => {
           settings.Text = "Адресс:";
         }).GetHtml()</td>
     
        <td> @Html.DevExpress().MemoFor(model =>  Address.OtherCountry_Address, settings => {             
                 settings.Width = 400;
                 settings.Height = 80;
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.Display = Display.None;
                 if (ViewBag.readonlytype == true)
                 {
                     settings.ReadOnly = true;
                 }
                }).GetHtml()   
       </td> 
   </tr>
   </table> 
</div>

     </fieldset>
</div>
 