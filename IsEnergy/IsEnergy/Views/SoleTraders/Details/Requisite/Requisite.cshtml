@using IsEnergyModel;

@{
    Layout = null;
}

@{
    SoleTraders SoleTraders = new SoleTraders();
    SoleTraders = ViewBag.SoleTraders;  
 }
  
<script type="text/javascript">
   
    function Edit_SoleTraders() {
        
        if (ASPxClientEdit.ValidateGroup('err')) {
            if (confirm("Сохранить изменения ?")==true) {
                $('#EditForm').attr('action', '/SoleTraders/Edit');
                $("#EditForm").submit();    
            }
          }
    }

    function Delete_SoleTraders() {

       
            if (confirm("Удалить ИП  ?")) {
                $('#EditForm').attr('action', '/SoleTraders/Delete');
                $("#EditForm").submit();
            }
        }
   

</script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "EditForm", enctype = "Multipart/form-data" }))
{
 @Html.HiddenFor(model => SoleTraders.IdSoleTrader)
 @Html.HiddenFor(model => SoleTraders.IdentifierSubscriber)
<div id="SoleTradersRequisites">
  <div id="RequisitesSoleTraderss">
      <div id="DataSoleTraders">
       <fieldset>
        <legend>Реквизиты</legend>
          <table>  
       
                <tr>
                    <td>@Html.DevExpress().LabelFor(model => SoleTraders.FirstName, settings =>{
                       settings.Text = "Имя*"; 
                       }).GetHtml()</td>

                    <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.FirstName, settings => {

                             settings.Width = 250;
                 
                             settings.ShowModelErrors = true;
                             settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                             settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                             settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                             settings.Properties.ValidationSettings.ValidationGroup = "err";
                            }).GetHtml()   </td> 
          
               </tr> 
                <tr>
                    <td>@Html.DevExpress().LabelFor(model => SoleTraders.MidleName, settings =>{
                       settings.Text = "Фамилия*"; 
                       }).GetHtml()</td>

                    <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.MidleName, settings => {
                             settings.Width = 250;
                             settings.ShowModelErrors = true;
                             settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                             settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                             settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                             settings.Properties.ValidationSettings.ValidationGroup = "err";
                            }).GetHtml()   </td> 
         
               </tr> 
                <tr>
                    <td>@Html.DevExpress().LabelFor(model => SoleTraders.LastName, settings =>{
                        settings.Text = "Очество*"; 
                       }).GetHtml()</td>
                    <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.LastName, settings => {
                             settings.Width = 250;
                             settings.ShowModelErrors = true;
                             settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                             settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                             settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                             settings.Properties.ValidationSettings.ValidationGroup = "err";
                            }).GetHtml()   </td> 
          
               </tr> 
                
                 <tr>
                    <td>@Html.DevExpress().LabelFor(model => SoleTraders.INN, settings =>{
                        settings.Text = "ИНН*"; 
                       }).GetHtml()</td>
                    <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.INN, settings => {
                             settings.Width = 250;
                             settings.ShowModelErrors = true;
                             settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                             settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                             settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                             settings.Properties.ValidationSettings.ValidationGroup = "err";
                            }).GetHtml()   </td> 
                        
                 </tr>
                <tr>
                    <td>@Html.DevExpress().LabelFor(model => SoleTraders.OGRN, settings =>{
                       settings.Text = "ОГРНИП*"; 
                       }).GetHtml()</td>
                    <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.OGRN, settings => {
                             settings.Width = 250;
                             settings.ShowModelErrors = true;
                             settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                             settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                             settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                             settings.Properties.ValidationSettings.ValidationGroup = "err";
                            }).GetHtml()   </td> 
                        
                 </tr>

                 <tr>
                     <td>@Html.DevExpress().LabelFor(model => SoleTraders.IdIFNS, settings =>{
                         settings.Text = "ИФНС*"; 
                       }).GetHtml()</td>
                     <td> @Html.DevExpress().ComboBoxFor(model => SoleTraders.IdIFNS,
                             settings =>
                            {
                                settings.Width = 350;
                                settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                                settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                settings.Properties.TextFormatString = "({0}) {1}";
                                settings.Properties.ValueField = "IdIFNS";
                                settings.Properties.AnimationType = AnimationType.Auto;
                                settings.Properties.ValueType = typeof(int);
                                settings.Properties.Columns.Add("Code", "Код", 50);
                                settings.Properties.Columns.Add("ShortName", "Название", 300);
                                settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                                }).BindList(ViewData["IFNS"]).GetHtml()</td>  
                    </tr>

               </table>
          </fieldset>
    </div>
     @Html.Action("AddressView")

    </div> 

  <fieldset id="RequisitesContactSoleTradersfildset">
        <legend>Ответственное лицо/пользователь</legend>  
 <table>
     <tr>
        <td>@Html.DevExpress().LabelFor(model => SoleTraders.ContactFaceFirstName, settings =>{
             settings.Text = "Фамилия*"; 
           }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.ContactFaceFirstName, settings => {
           
                 settings.Width = 200;
               
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                 settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                 settings.Properties.ValidationSettings.ValidationGroup = "err";
                }).GetHtml()   </td> 
       
     </tr>
      <tr>
        <td>@Html.DevExpress().LabelFor(model => SoleTraders.ContactFaceMidleName, settings =>{
             settings.Text = "Имя*"; 
           }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.ContactFaceMidleName, settings => {
            
                 settings.Width = 200;
                
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                 settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                 settings.Properties.ValidationSettings.ValidationGroup = "err";
                }).GetHtml()   </td> 
         
     </tr>
    <tr>
        <td>@Html.DevExpress().LabelFor(model =>  SoleTraders.ContactFaceLastName, settings =>{
             settings.Text = "Очество*"; 
           }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.ContactFaceLastName, settings => {
                 settings.Width = 200;
                
                 settings.ShowModelErrors = true;
                 settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                 settings.Properties.ValidationSettings.RequiredField.ErrorText = "Обязательное поле";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                 settings.Properties.ValidationSettings.ValidationGroup = "err";
                }).GetHtml()   </td> 
         
        <tr>
         <td>@Html.DevExpress().LabelFor(model => SoleTraders.Phone, settings =>{
              settings.Text = "Телефон*"; 
           }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.Phone, settings => {
                  
                  settings.Width = 200;
                 
                  //settings.Properties.MaskSettings.Mask = "8-(000) 000-00-00";
                  settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                  settings.Properties.ValidationSettings.ValidationGroup = "err";
                }).GetHtml()   </td> 
        
     </tr>
    <tr>
        <td>@Html.DevExpress().LabelFor(model => SoleTraders.Email, settings =>{
              settings.Text = "E-mail"; 
           }).GetHtml()</td>
        <td> @Html.DevExpress().TextBoxFor(model => SoleTraders.Email, settings => {
           
                 settings.Width = 200;
               
                 settings.ShowModelErrors = true;
               
                 settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}";
                 settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Некорректный адрес";
                 settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                 settings.Properties.ValidationSettings.ValidationGroup = "err";
                   
                }).GetHtml()   </td> 
      
     </tr>
      
      
       </table> 
    </fieldset>

 
 
</div>  
  <table >
     <tr>
      <td>
          <button class="action bluebtn" type="button" onclick="javascript:Edit_SoleTraders();"><span class="label">Редактировать</span></button>
     </td>
         
      <td> 
          <button class="action redbtn" type="button"  onclick="javascript:Delete_SoleTraders();"><span class="label">Удалить</span></button>
     </td>
</table> 
}


      


 

   
  
       
       
    
 


